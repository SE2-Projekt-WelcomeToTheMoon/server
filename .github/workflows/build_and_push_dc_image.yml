name: Build and push docker image to GitHub

on:
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and push docker image on server
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build java project
        run: mvn package

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push docker image to github
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SECRET }}
          SERVER_IP: ${{ secrets.SERVER_URL }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_PAT: ${{ secrets.REGISTRY_PAT }}
          IMAGE_PATH: ${{ secrets.IMAGE_PATH }}
          DOCKER_NAME: grp-1-welcome_to_the_moon
          USER_NAME: ${{ secrets.USERNAME }}

        run: |
          echo "${{ env.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add - > /dev/null
          ssh -o StrictHostKeyChecking=no -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} << 'EOF'
            echo ${{ env.DOCKER_PAT }} | docker login ghcr.io -u ${{ env.USER_NAME }} --password-stdin
            docker stop ${{ env.DOCKER_NAME }} || true
            docker rm ${{ env.DOCKER_NAME }} || true
            docker pull ${{ env.IMAGE_PATH }}
            docker run -d --name ${{ env.DOCKER_NAME }} -p ${{ env.SERVER_PORT }}:80 ${{ env.IMAGE_PATH }}
          EOF
